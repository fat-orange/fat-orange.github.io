<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>编程坑点</title>
      <link href="/2023/04/06/%E7%BC%96%E7%A8%8B%E5%9D%91%E7%82%B9/"/>
      <url>/2023/04/06/%E7%BC%96%E7%A8%8B%E5%9D%91%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>#编程坑点</p><ol><li>函数传参时，数组传进来的是地址而不是整个数组，因此下面这个函数是不被允许的<figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">arr_head_insert</span><span class="params">(<span class="type">char</span>* head_arr, <span class="type">char</span>* arr)</span></span><br><span class="line">{</span><br><span class="line">head_arr_num = <span class="keyword">sizeof</span>(head_arr) / <span class="keyword">sizeof</span>(head_arr[<span class="number">0</span>])</span><br><span class="line">arr_num = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; arr_num; i++)</span><br><span class="line">    {</span><br><span class="line">        arr[arr_num+head_arr_num<span class="number">-1</span>-i] = arr[arr_num<span class="number">-1</span>-i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; head_arr_num; i++)</span><br><span class="line">    {</span><br><span class="line">        arr[i] = head_arr[i];</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>因此最好是讲数组的个数传参进来<figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">arr_head_insert</span><span class="params">(<span class="type">char</span>* head_arr, <span class="type">char</span>* arr, <span class="type">int</span> head_arr_num, <span class="type">int</span> arr_num)</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; arr_num; i++)</span><br><span class="line">    {</span><br><span class="line">        arr[arr_num+head_arr_num<span class="number">-1</span>-i] = arr[arr_num<span class="number">-1</span>-i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; head_arr_num; i++)</span><br><span class="line">    {</span><br><span class="line">        arr[i] = head_arr[i];</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>编程规范</title>
      <link href="/2023/04/06/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/"/>
      <url>/2023/04/06/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h1 id="编程规范"><a href="#编程规范" class="headerlink" title="编程规范"></a>编程规范</h1><ol><li>函数命名的首字母大写，尽量不使用_进行衔接，而是使用大小字母进行衔接<figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoraInit()</span><br></pre></td></tr></tbody></table></figure></li><li>如果在多台机器编写程序，变量名应当使用一致</li><li>变量名最好都小写，使用_进行衔接<figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uart1_config</span><br></pre></td></tr></tbody></table></figure></li><li>宏定义全部使用大写字母<figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> RX0_BUF_SIZE (1024)</span></span><br></pre></td></tr></tbody></table></figure></li><li>结构体初始化使用声名加定义(我在分开声明和定义有过无法配置串口的错误)<figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uart_config_t</span> uart1_config ={</span><br><span class="line">.baud_rate = <span class="number">115200</span>,</span><br><span class="line">.data_bits = UART_DATA_8_BITS,<span class="comment">//数据位</span></span><br><span class="line">.parity = UART_PARITY_DISABLE,<span class="comment">//校验位</span></span><br><span class="line">.stop_bits = UART_STOP_BITS_1,<span class="comment">//停止位</span></span><br><span class="line">.flow_ctrl = UART_HW_FLOWCTRL_DISABLE<span class="comment">//硬件流控</span></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></li><li>头文件放在C文件中，减少重复编译文件。</li><li>一些初始化函数和标志变量应当将具有定义类型的描述放在函数名或者变量名后<figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TimerInit();</span><br><span class="line"></span><br><span class="line">timer0_flag;</span><br></pre></td></tr></tbody></table></figure></li><li>大数组最好使用堆，锻炼使用堆，释放堆的习惯。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电子调试坑点</title>
      <link href="/2023/04/04/%E7%94%B5%E5%AD%90%E8%B0%83%E8%AF%95%E5%9D%91%E7%82%B9/"/>
      <url>/2023/04/04/%E7%94%B5%E5%AD%90%E8%B0%83%E8%AF%95%E5%9D%91%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="电子调试坑点"><a href="#电子调试坑点" class="headerlink" title="电子调试坑点"></a>电子调试坑点</h1><ol><li>芯片是有可能没用的，在测试完所有的线路以及引脚通断后，很有可能是芯片本身损坏了。</li><li>虚焊的一个表现在于使用万用表测试通断时，如果需要用力按压才能连通，则说明很有可能引脚虚焊了。</li><li>在使用RTOS系统时，在使用SPI控制LCD屏幕时，需要考虑到SPI可能正在进行读取数据，所以需要等SPI操作完才能再进行另外的操作。<br>我今天使用SPI控制LCD屏幕，使用清屏函数时，直接白屏了，直到我在清屏函数前添加了延时才得以解决，所以可以推理到，实时操作系统都需要考虑<br>这些操作。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>lua GBK编码数组转换成字符串</title>
      <link href="/2023/04/04/lua-GBK%E7%BC%96%E7%A0%81%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2023/04/04/lua-GBK%E7%BC%96%E7%A0%81%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="lua-GBK编码数组转换成字符串"><a href="#lua-GBK编码数组转换成字符串" class="headerlink" title="lua GBK编码数组转换成字符串"></a>lua GBK编码数组转换成字符串</h1><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">---字节数组转字符串</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrayToString</span><span class="params">(array)</span></span></span><br><span class="line"> <span class="keyword">local</span> strMiddle= <span class="string">''</span></span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">1</span>,#array <span class="keyword">do</span></span><br><span class="line">  strMiddle=strMiddle..<span class="built_in">string</span>.<span class="built_in">char</span>(array[i])  </span><br><span class="line"> <span class="keyword">end</span>  </span><br><span class="line"> <span class="keyword">return</span> strMiddle; </span><br><span class="line"><span class="keyword">end</span> </span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录hexo多台电脑安装过程</title>
      <link href="/2023/04/03/%E8%AE%B0%E5%BD%95hexo%E5%A4%9A%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/"/>
      <url>/2023/04/03/%E8%AE%B0%E5%BD%95hexo%E5%A4%9A%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="多台电脑安装hexo"><a href="#多台电脑安装hexo" class="headerlink" title="多台电脑安装hexo"></a>多台电脑安装hexo</h1><h2 id="老电脑上的操作"><a href="#老电脑上的操作" class="headerlink" title="老电脑上的操作"></a>老电脑上的操作</h2><ol start="3"><li><p>实现的原理，主要是使用git分支来实现同步，所以我们需要先在gihub上新建一个分支。</p><p><a href="/img/hexo-1.jpeg">图片</a></p></li><li><p>标号1为需要输入新的分支，标号2为创建分支，标号3打开设置。<br><a href="/img/hexo-2.jpeg">图片</a></p></li><li><p>标号1选择分支，标号2选择分支，标号3选择默认分支</p></li><li><p>接下来需要在老电脑上，首先clone仓库到本地</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:username/username.github.io.git</span><br></pre></td></tr></tbody></table></figure><p>注:<a href="mailto:git@github.com">git@github.com</a>指的是你github注册的邮箱,username指的是你github的用户名</p></li><li><p>接着只留下了.git文件夹,其他的文件和文件夹全部删除(如果找不到.git文件夹，那么可能是你的隐藏文件的选项没有勾上)</p></li><li><p>然后再跳到原来存放hexo文件的位置，将除了.deploy_git，其余都复制到clone的文件夹中。</p><p>注意:1.存放hexo文件的位置应当有一个 .gitignore文件，这个文件用来表示这些文件不需要git上传,如果没有重新创建一个即可</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="新电脑上操作"><a href="#新电脑上操作" class="headerlink" title="新电脑上操作"></a>新电脑上操作</h2><ol><li><p>hexo安装在多台电脑上，主要使用了git和nodejs工具</p></li><li><p>在新电脑上首先需要安装git和nodejs，</p><p>git 淘宝镜像链接<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">CNPM Binaries Mirror (npmmirror.com)</a></p><p>nodejs 官网 <a href="https://nodejs.org/zh-cn">Node.js (nodejs.org)</a></p></li><li><p>通过下面命令生成新的ssh key</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></tbody></table></figure><p>注:这个<a href="mailto:your_email@example.com">your_email@example.com</a>指的是你自己github注册的邮箱</p><p>如果已经有了SSH key，可以通过下面命令查找id_rsa.pub(公钥)和id_rsa(私钥)的位置</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al ~/.ssh</span><br></pre></td></tr></tbody></table></figure></li><li><p>将新的id_rsa.pub(公钥)添加到你的github账户</p></li><li><p>新建一个hexo文件夹用来存放新的hexo文件，在hexo文件夹右键点击GIt bash here。输入下面命令</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:username/username.github.io.git</span><br></pre></td></tr></tbody></table></figure><p>注:<a href="mailto:git@github.com">git@github.com</a>指的是你github注册的邮箱,username指的是你github的用户名</p></li><li><p>此时依次执行</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><p>接下来就可以在新电脑开始编写文章了</p></li></ol><p>注：1. 可能有部分同学会发现hexo 命令会提示无法发现没有hexo，这是因为环境变量没有安装好，自己安装一下即可</p><ol start="2"><li><p>一定要在编写文章之前进行git pull ，以此保证文章同步</p></li><li><p>编写完之后，一定要执行下列指令</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit –m add_branch</span><br><span class="line">git push</span><br></pre></td></tr></tbody></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子设计坑点</title>
      <link href="/2023/03/31/%E7%94%B5%E5%AD%90%E8%AE%BE%E8%AE%A1%E5%9D%91%E7%82%B9/"/>
      <url>/2023/03/31/%E7%94%B5%E5%AD%90%E8%AE%BE%E8%AE%A1%E5%9D%91%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="电子设计坑点"><a href="#电子设计坑点" class="headerlink" title="电子设计坑点"></a>电子设计坑点</h1><ol><li><p>PCB板到手上之后，一定要先通过代码检测外围电路，这一步千万不能省</p></li><li><p>如果外围电路出现了问题，首先应当检测电路的电压，如果电压正确就可以排除元器件本身的问题</p></li><li><p>然后再监测线路的通断，保证原理图和PCB板的正确性。</p></li><li><p>最后保证硬件没有进行过修改。举一个例子，我调试过一块板子，本来MAX485芯片与ESP32之间是直接通过线路相连的，但是硬件工程师在两个之间给我加了一个io缓冲芯片，而且芯片引脚还焊错。所以无法通过485进行通讯。</p><p>基于以上几点，大家做嵌入式在编写程序一定要先检查硬件电路。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 坑点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>状态挺好</title>
      <link href="/2023/02/22/%E7%8A%B6%E6%80%81%E6%8C%BA%E5%A5%BD/"/>
      <url>/2023/02/22/%E7%8A%B6%E6%80%81%E6%8C%BA%E5%A5%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="状态挺好"><a href="#状态挺好" class="headerlink" title="状态挺好"></a>状态挺好</h1><ol><li>申论的精髓在于，答题结构和细心的圈关键词，划线成型的材料，合理成文</li><li>横向无脑抄材料、纵向整合分析材料</li><li>亢奋的心态+细心的答题框架+成文=申论高分</li></ol>]]></content>
      
      
      <categories>
          
          <category> 考公日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>就离谱</title>
      <link href="/2023/02/21/%E5%B0%B1%E7%A6%BB%E8%B0%B1/"/>
      <url>/2023/02/21/%E5%B0%B1%E7%A6%BB%E8%B0%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="真的离谱"><a href="#真的离谱" class="headerlink" title="真的离谱"></a>真的离谱</h1><ol><li>突然怀疑智商差距是在的</li><li>合适的休息+亢奋的心态+细心的审题=上岸</li><li>我已经进入臻境，这次必上岸</li></ol>]]></content>
      
      
      <categories>
          
          <category> 考公日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>找寻感觉</title>
      <link href="/2023/02/20/%E6%89%BE%E5%AF%BB%E6%84%9F%E8%A7%89/"/>
      <url>/2023/02/20/%E6%89%BE%E5%AF%BB%E6%84%9F%E8%A7%89/</url>
      
        <content type="html"><![CDATA[<h1 id="感觉似乎好些了"><a href="#感觉似乎好些了" class="headerlink" title="感觉似乎好些了"></a>感觉似乎好些了</h1><ol><li>感觉慢慢有些来了，跟整个人的亢奋程度有关，基本的知识，我已经了解了，没有很大的牵挂，过题也果断，这是考试的感觉，越做越兴奋</li><li>今日面试了三个，先做做硬件吧，自己偷偷学软件，英语，好好的培养自己。走Linux不会错的。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 考公日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>未来技术道路</title>
      <link href="/2023/02/19/%E6%9C%AA%E6%9D%A5%E6%8A%80%E6%9C%AF%E9%81%93%E8%B7%AF/"/>
      <url>/2023/02/19/%E6%9C%AA%E6%9D%A5%E6%8A%80%E6%9C%AF%E9%81%93%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="前进道路"><a href="#前进道路" class="headerlink" title="前进道路"></a>前进道路</h1><ol><li>脱离单片机，做Linux开发</li><li>做LInux驱动开发+汽车电子</li></ol><p>  ——————————</p><p><img src="/img/%E5%9B%BE%E7%89%871.jpg" alt="道路"></p>]]></content>
      
      
      <categories>
          
          <category> 技术日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>状态尚可</title>
      <link href="/2023/02/19/%E7%8A%B6%E6%80%81%E5%B0%9A%E5%8F%AF/"/>
      <url>/2023/02/19/%E7%8A%B6%E6%80%81%E5%B0%9A%E5%8F%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="状态尚可"><a href="#状态尚可" class="headerlink" title="状态尚可"></a>状态尚可</h1><ol><li><p>心态慢慢缓过来了，虽然还是90题左右的水平</p></li><li><p>言语、判断、资料炸坑了</p></li><li><p>还有5天了</p><p>——————</p><p>好好学习，日行一步，终到终点</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 考公日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今日状态普通</title>
      <link href="/2023/02/18/%E4%BB%8A%E6%97%A5%E7%8A%B6%E6%80%81%E6%99%AE%E9%80%9A/"/>
      <url>/2023/02/18/%E4%BB%8A%E6%97%A5%E7%8A%B6%E6%80%81%E6%99%AE%E9%80%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="好好生活-好好学习"><a href="#好好生活-好好学习" class="headerlink" title="好好生活 好好学习"></a>好好生活 好好学习</h1><ol><li><p>早上起来玩了</p></li><li><p>思考了一下未来的事，考上了就回家了，这里就留作吐槽的地方了；没考上就走技术路线了</p></li><li><p>依旧是90题的水平咯，言语还是得上语感，不要过度分析咯，申论今天还没看咯，依旧都有些感觉了吧，瓶颈就在这几天了，破了就上岸了</p><p>————</p><p>时间很长，回头看过去，也许都是最好的选择</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 考公日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学不进去噢</title>
      <link href="/2023/02/17/post/"/>
      <url>/2023/02/17/post/</url>
      
        <content type="html"><![CDATA[<h1 id="专注力差"><a href="#专注力差" class="headerlink" title="专注力差"></a>专注力差</h1><ol><li>做试卷老是分神</li><li>听歌缓解会好不少但是还是不能一直听</li><li>考了60多分，难受噢</li></ol>]]></content>
      
      
      <categories>
          
          <category> 考公日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>胖胖橘子的第一篇博客</title>
      <link href="/2023/02/17/%E8%83%96%E8%83%96%E6%A9%98%E5%AD%90%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blog/"/>
      <url>/2023/02/17/%E8%83%96%E8%83%96%E6%A9%98%E5%AD%90%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blog/</url>
      
        <content type="html"><![CDATA[<h1 id="空气中充满了快活的气息"><a href="#空气中充满了快活的气息" class="headerlink" title="空气中充满了快活的气息"></a>空气中充满了快活的气息</h1><p>起飞</p>]]></content>
      
      
      <categories>
          
          <category> 技术日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
